TASKS_FILE="$HOME/.tasks"

user_guide() {
    echo "Task Tracker (tt) User Guide"
    echo "=============================="
    echo "Available Functions"
    echo "  tt add \"<task_description>\"  - Add a new task"
    echo "  tt complete \"<task_description>\" - Complete a task"
    echo "  tt view                       - View all tasks"
    echo "  tt clear                      - Clear all tasks"
    echo "  tt help                       - Show this help message"
    echo ""
    echo "Examples:"
    echo "  tt add \"Walk the dog\""
    echo "  tt complete \"Walk the dog\""
    echo "  tt view"
    echo "  tt clear"
}

if [ -z "$1" ]; then
    echo "Invalid argument."
    user_guide
    exit 1
fi

case $1 in
    add)
        if [ -z "$2" ]; then
            read -p "Enter task description: " task
        else
            task="$2"
        fi
        echo "$task" >> "$TASKS_FILE"
        echo "Task added: $task"
        ;;
    complete)
        if [ -z "$2" ]; then
            read -p "Enter task description: " task
        else
            task="$2"
        fi
        if grep -qx "$task" "$TASKS_FILE"; then
            grep -v -x "$task" "$TASKS_FILE" > "$TASKS_FILE.tmp" && mv "$TASKS_FILE.tmp" "$TASKS_FILE"
            echo "Task completed: $task"
        else
            echo "Task not found: $task"
        fi
        ;;
    view)
        if [ -f "$TASKS_FILE" ]; then
            echo "Tasks:"
            cat "$TASKS_FILE"
        else
            echo "No tasks found."
        fi
        ;;
    clear)
        read -p "Are you sure you want to remove all tasks? (y/n) " confirm
        if [[ $confirm == [yY] ]]; then
            rm -f "$TASKS_FILE"
            echo "All tasks cleared."
        else
            echo "Operation cancelled."
        fi
        ;;
    help)
        user_guide
        ;;
    *)
        echo "Invalid argument."
        user_guide
        exit 1
        ;;
esac
